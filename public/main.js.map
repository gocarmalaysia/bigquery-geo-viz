{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/file-size.pipe.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/rule/rule.component.css","webpack:///./src/app/rule/rule.component.html","webpack:///./src/app/rule/rule.component.ts","webpack:///./src/app/services/bigquery.service.ts","webpack:///./src/app/services/firestore.service.ts","webpack:///./src/app/services/geojson.service.ts","webpack:///./src/app/services/styles.service.ts","webpack:///./src/app/terms/terms.component.css","webpack:///./src/app/terms/terms.component.html","webpack:///./src/app/terms/terms.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///../node/utils/to-array-buffer.node (ignored)","webpack:///../../node/read-file-sync.node (ignored)","webpack:///../../node/write-file.node (ignored)","webpack:///asciify-image (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"main {\\n    min-height: 100vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIscUJBQWM7SUFBZCxjQUFjO0lBQ2QsNkJBQXVCO0lBQXZCLDhCQUF1QjtZQUF2Qix1QkFBdUI7Q0FDMUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1haW4ge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbiJdfQ== */\"","module.exports = \"<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewContainerRef } from '@angular/core';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  readonly title = 'BigQuery Geo Viz';\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as colorbrewer from 'colorbrewer';\n\nexport const Step = {\n    DATA: 0,\n    SCHEMA: 1,\n    STYLE: 2,\n    SHARE: 3\n};\n\n// Maximum number of results to be returned by BigQuery API.\nexport const MAX_RESULTS = 5000000;\n\n// Maximum number of results to be shown in the HTML preview table.\nexport const MAX_RESULTS_PREVIEW = 10;\n\n// How long to wait for the query to complete, in milliseconds, before the request times out and returns.\nexport const TIMEOUT_MS = 120000;\n\n// Used to write the sharing data and maintain backward compatibility.\nexport const SHARING_VERSION = \"v1\";\n\nexport const SAMPLE_PROJECT_ID = 'google.com:bqmapper';\nexport const SAMPLE_QUERY = `SELECT\n  ST_GeogPoint(longitude, latitude)  AS WKT,\n  status,\n  health,\n  spc_common,\n  user_type,\n  problems,\n  tree_dbh\nFROM \\`bigquery-public-data.new_york_trees.tree_census_2015\\`\nWHERE status = 'Alive'\nLIMIT 50000;`;\n\n// Each page is 10MB. This means the total data will be 250MB at most..\nexport const MAX_PAGES = 25;\n\nexport const SAMPLE_FILL_OPACITY = {isComputed: false, value: 0.8};\nexport const SAMPLE_FILL_COLOR = {\n  isComputed: true,\n  property: 'health',\n  function: 'categorical',\n  domain: ['Poor', 'Fair', 'Good'],\n  range: ['#F44336', '#FFC107', '#4CAF50']\n};\nexport const SAMPLE_CIRCLE_RADIUS = {\n  isComputed: true,\n  property: 'tree_dbh',\n  function: 'linear',\n  domain: [0, 500],\n  range: [10, 50]\n};\n\nexport const PALETTES = Object.keys(colorbrewer).map((key) => colorbrewer[key]);\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CodemirrorModule } from 'ng2-codemirror';\nimport { NgModule, enableProdMode } from '@angular/core';\n\nimport { routes } from './app.routing';\nimport { RouterModule } from '@angular/router';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { MapComponent } from './map/map.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { RuleInputComponent } from './rule/rule.component';\nimport { FileSizePipe } from './file-size.pipe';\nimport { environment } from '../environments/environment';\n\nimport {StorageServiceModule} from 'angular-webstorage-service';\nimport {ColorPickerModule} from 'ngx-color-picker';\n\nif ( environment.production ) {\n  enableProdMode();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    MapComponent,\n    TermsComponent,\n    RuleInputComponent,\n    FileSizePipe,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CodemirrorModule,\n\n    RouterModule.forRoot(routes),\n\n    MatInputModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatTableModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StorageServiceModule,\n\n    ColorPickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Routes } from '@angular/router';\nimport { TermsComponent } from './terms/terms.component';\nimport { MainComponent } from './main/main.component';\nexport const routes: Routes = [\n  {\n    path: '',\n    component: MainComponent\n  },\n  {\n    path: 'terms',\n    component: TermsComponent\n  },\n  {\n    path: 'project',\n    children: [\n      {\n        path: ':project/dataset/:dataset/table/:table',\n        component: MainComponent\n      },\n      {\n        path: ':project/job',\n        children: [\n          {\n            path: ':job/location/:location',\n            component: MainComponent\n          },\n          {\n            path: ':job',\n            component: MainComponent\n          },\n        ]\n      },\n    ]\n  },\n];\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nconst UNITS = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n\n  transform(bytes: number = 0, precision: number = 2): string {\n    if (!isFinite(bytes)) { return ''; }\n\n    let unit;\n    for (unit = 0; bytes >= 1024; unit++) {\n      bytes /= 1024;\n    }\n\n    const value = bytes.toFixed(Number(precision));\n    return `${value} ${UNITS[unit]}`;\n  }\n}\n","module.exports = \".view {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: reverse;\\n            flex-direction: row-reverse;\\n}\\n\\n.header-profile {\\n    font-size: 14px;\\n    padding: 0 16px;\\n}\\n\\n.header-logo {\\n    height: 32px;\\n    margin-right: 0.5em;\\n}\\n\\n.flex-spacer {\\n    -webkit-box-flex: 1;\\n            flex-grow: 1;\\n}\\n\\n.toolbar-divider {\\n    padding: 0 16px;\\n}\\n\\n.drawer {\\n    max-width: 600px;\\n    max-height: calc(100vh - 64px);\\n    overflow: auto;\\n    flex-shrink: 0;\\n}\\n\\n.sidenav-container {\\n    position: fixed;\\n    left: 0;\\n    right: 0;\\n}\\n\\n.stepper {\\n    max-width: 100%;\\n    overflow: auto;\\n    flex-shrink: 0;\\n}\\n\\nmat-progress-spinner {\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n\\n.apply-style-button {\\n    margin-top: 0.5em;\\n}\\n\\n.create-share-link-button {\\n    margin-bottom: 0.5em;\\n}\\n\\n.toggle-button,\\n.preset-button {\\n  position: fixed;\\n  bottom: 1em;\\n  background: #00539b;\\n  z-index: 10000;\\n}\\n\\n.toggle-button {\\n  left: 1em;\\n}\\n\\n.preset-button {\\n  /* spacing + buttonWidth + spacing */\\n  left: calc(1em + 40px + 1em);\\n}\\n\\n.sql-form-field {\\n    display: block;\\n    width: 100%;\\n    max-width: 600px;\\n}\\n\\n.sql-lint {\\n    font-size: 0.8em;\\n    color: crimson;\\n}\\n\\n.sql-caption {\\n    color: #888;\\n    font-size: 0.8em;\\n}\\n\\n.sql-location {\\n    margin-top: 1em;\\n    display: block;\\n}\\n\\n.num-results-text {\\n    font-size: 0.8em;\\n}\\n\\n.result-table {\\n    overflow-x: auto;\\n}\\n\\n.result-table-cell {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n}\\n\\n.styles-prop-list .rule-badge {\\n    font-size: 0.6em;\\n    font-weight: 500;\\n    display: inline-block;\\n    padding: 0.5em;\\n    color: #ffffff;\\n    border-radius: 2px;\\n}\\n\\n.styles-prop-list mat-panel-title {\\n    width: 150px;\\n    -webkit-box-flex: 0;\\n            flex-grow: 0;\\n}\\n\\n.styles-prop-list .rule-badge.computed { background: #00539b; }\\n\\n.styles-prop-list .rule-badge.global { background: #F4B400; }\\n\\n.styles-prop-list .rule-badge.none { background: #e5e3df; color: #000000; }\\n\\n.mat-toolbar.mat-primary,\\n.mat-raised-button.mat-primary,\\n.mat-step-header .mat-step-icon {\\n    color: #FFFFFF;\\n}\\n\\n.mat-raised-button[disabled] {\\n    background: #e5e3df;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBYztJQUFkLGNBQWM7SUFDZCwrQkFBNEI7SUFBNUIsK0JBQTRCO1lBQTVCLDRCQUE0QjtDQUMvQjs7QUFFRDtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7Q0FDbkI7O0FBRUQ7SUFDSSxhQUFhO0lBQ2Isb0JBQW9CO0NBQ3ZCOztBQUVEO0lBQ0ksb0JBQWE7WUFBYixhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksZ0JBQWdCO0NBQ25COztBQUVEO0lBQ0ksaUJBQWlCO0lBQ2pCLCtCQUErQjtJQUMvQixlQUFlO0lBQ2YsZUFBZTtDQUNsQjs7QUFFRDtJQUNJLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsU0FBUztDQUNaOztBQUVEO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixlQUFlO0NBQ2xCOztBQUVEO0lBQ0ksc0JBQXNCO0lBQ3RCLHVCQUF1QjtDQUMxQjs7QUFFRDtJQUNJLGtCQUFrQjtDQUNyQjs7QUFFRDtJQUNJLHFCQUFxQjtDQUN4Qjs7QUFFRDs7RUFFRSxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixlQUFlO0NBQ2hCOztBQUVEO0VBQ0UsVUFBVTtDQUNYOztBQUVEO0VBQ0UscUNBQXFDO0VBQ3JDLDZCQUE2QjtDQUM5Qjs7QUFFRDtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLHdCQUF3QjtDQUMzQjs7QUFFRDtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixlQUFlO0lBQ2YsbUJBQW1CO0NBQ3RCOztBQUVEO0lBQ0ksYUFBYTtJQUNiLG9CQUFhO1lBQWIsYUFBYTtDQUNoQjs7QUFFRCx5Q0FBeUMsb0JBQW9CLEVBQUU7O0FBQy9ELHVDQUF1QyxvQkFBb0IsRUFBRTs7QUFDN0QscUNBQXFDLG9CQUFvQixDQUFDLGVBQWUsRUFBRTs7QUFFM0U7OztJQUdJLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxvQkFBb0I7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9tYWluL21haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aWV3IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cblxuLmhlYWRlci1wcm9maWxlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgcGFkZGluZzogMCAxNnB4O1xufVxuXG4uaGVhZGVyLWxvZ28ge1xuICAgIGhlaWdodDogMzJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuXG4uZmxleC1zcGFjZXIge1xuICAgIGZsZXgtZ3JvdzogMTtcbn1cblxuLnRvb2xiYXItZGl2aWRlciB7XG4gICAgcGFkZGluZzogMCAxNnB4O1xufVxuXG4uZHJhd2VyIHtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSA2NHB4KTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbn1cblxuLnN0ZXBwZXIge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxubWF0LXByb2dyZXNzLXNwaW5uZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uYXBwbHktc3R5bGUtYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAwLjVlbTtcbn1cblxuLmNyZWF0ZS1zaGFyZS1saW5rLWJ1dHRvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi50b2dnbGUtYnV0dG9uLFxuLnByZXNldC1idXR0b24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMWVtO1xuICBiYWNrZ3JvdW5kOiAjMDA1MzliO1xuICB6LWluZGV4OiAxMDAwMDtcbn1cblxuLnRvZ2dsZS1idXR0b24ge1xuICBsZWZ0OiAxZW07XG59XG5cbi5wcmVzZXQtYnV0dG9uIHtcbiAgLyogc3BhY2luZyArIGJ1dHRvbldpZHRoICsgc3BhY2luZyAqL1xuICBsZWZ0OiBjYWxjKDFlbSArIDQwcHggKyAxZW0pO1xufVxuXG4uc3FsLWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNjAwcHg7XG59XG5cbi5zcWwtbGludCB7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICBjb2xvcjogY3JpbXNvbjtcbn1cblxuLnNxbC1jYXB0aW9uIHtcbiAgICBjb2xvcjogIzg4ODtcbiAgICBmb250LXNpemU6IDAuOGVtO1xufVxuXG4uc3FsLWxvY2F0aW9uIHtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5udW0tcmVzdWx0cy10ZXh0IHtcbiAgICBmb250LXNpemU6IDAuOGVtO1xufVxuXG4ucmVzdWx0LXRhYmxlIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xufVxuXG4ucmVzdWx0LXRhYmxlLWNlbGwge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLnN0eWxlcy1wcm9wLWxpc3QgLnJ1bGUtYmFkZ2Uge1xuICAgIGZvbnQtc2l6ZTogMC42ZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMC41ZW07XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG4uc3R5bGVzLXByb3AtbGlzdCBtYXQtcGFuZWwtdGl0bGUge1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBmbGV4LWdyb3c6IDA7XG59XG5cbi5zdHlsZXMtcHJvcC1saXN0IC5ydWxlLWJhZGdlLmNvbXB1dGVkIHsgYmFja2dyb3VuZDogIzAwNTM5YjsgfVxuLnN0eWxlcy1wcm9wLWxpc3QgLnJ1bGUtYmFkZ2UuZ2xvYmFsIHsgYmFja2dyb3VuZDogI0Y0QjQwMDsgfVxuLnN0eWxlcy1wcm9wLWxpc3QgLnJ1bGUtYmFkZ2Uubm9uZSB7IGJhY2tncm91bmQ6ICNlNWUzZGY7IGNvbG9yOiAjMDAwMDAwOyB9XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSxcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeSxcbi5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLWljb24ge1xuICAgIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b25bZGlzYWJsZWRdIHtcbiAgICBiYWNrZ3JvdW5kOiAjZTVlM2RmO1xufVxuIl19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"header\\\">\\n  <img class=\\\"header-logo\\\" src=\\\"assets/ic_logo@2X.png\\\" srcset=\\\"assets/ic_logo.png 1x,\\n               assets/ic_logo@2X.png 2x\\\" alt=\\\"BigQuery Geo Viz Logo\\\">\\n  <span>BigQuery Geo Viz</span>\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <a mat-button href=\\\"https://github.com/GoogleCloudPlatform/bigquery-geo-viz/issues\\\" target=\\\"_blank\\\">Feedback</a>\\n  <a mat-button href=\\\"https://github.com/GoogleCloudPlatform/bigquery-geo-viz\\\" target=\\\"_blank\\\">Source</a>\\n  <a mat-button href=\\\"/terms\\\">Terms &amp; privacy</a>\\n  <span class=\\\"toolbar-divider\\\">|</span>\\n  <span class=\\\"header-profile\\\">{{ user?.getBasicProfile().getEmail() }}</span>\\n  <button *ngIf=\\\"isSignedIn\\\" mat-button (click)=\\\"signout()\\\">Sign out</button>\\n</mat-toolbar>\\n\\n<div class=\\\"view\\\">\\n  <mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav-content>\\n      <app-map [rows]=\\\"rows\\\" [geoColumn]=\\\"schemaFormGroup.controls.geoColumn.value\\\" [styles]=\\\"styles\\\"></app-map>\\n    </mat-sidenav-content>\\n    <mat-sidenav #sidenav mode=\\\"side\\\" position=\\\"start\\\" [(opened)]=\\\"sideNavOpened\\\">\\n      <section class=\\\"drawer\\\">\\n        <mat-vertical-stepper linear (selectionChange)=\\\"onStepperChange($event)\\\" #stepper class=\\\"stepper\\\">\\n          <mat-step [stepControl]=\\\"dataFormGroup\\\" label=\\\"Query\\\">\\n\\n            <button *ngIf=\\\"!isSignedIn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"signin()\\\">Authorize</button>\\n\\n            <form *ngIf=\\\"isSignedIn\\\" [formGroup]=\\\"dataFormGroup\\\">\\n              <mat-form-field class=\\\"sql-form-field\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Project ID\\\" matInput formControlName=\\\"projectID\\\" ([ngModel])=\\\"model\\\"\\n                  [matAutocomplete]=\\\"auto\\\">\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let project of matchingProjects\\\" [value]=\\\"project.id\\\">\\n                    {{ project.id }}\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n\\n              <codemirror ref=\\\"codemirror\\\" formControlName=\\\"sql\\\" ([ngModel])=\\\"model\\\" [config]=\\\"cmConfig\\\"\\n                (change)=\\\"dryRun()\\\" (query)=\\\"query()\\\"></codemirror>\\n\\n              <div>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"query(stepper)\\\"\\n                  [disabled]=\\\"!dataFormGroup.valid || pending\\\">Run</button>\\n                <button mat-raised-button color=\\\"primary\\\" matStepperNext [disabled]=\\\"!rows.length || pending\\\"\\n                  [matTooltip]=\\\"rows.length !== totalRows ? 'Results may be truncated due to size and performance limitations. Selecting fewer columns or less data may increase this limit.'\\n                                                                : null\\\" matTooltipPosition=\\\"after\\\">\\n                  Show results ({{ rows.length | number }}<span *ngIf=\\\"rows.length !== totalRows\\\"> of\\n                    {{ totalRows | number }}</span>)\\n                </button>\\n                <mat-progress-spinner *ngIf=\\\"pending\\\" mode=\\\"indeterminate\\\" [diameter]=\\\"24\\\" [strokeWidth]=\\\"4\\\">\\n                </mat-progress-spinner>\\n                <p class=\\\"sql-caption\\\" *ngIf=\\\"bytesProcessed >= 0\\\">\\n                  Estimated query size: {{ bytesProcessed | fileSize:1 }}\\n                </p>\\n                <p *ngIf=\\\"lintMessage\\\" class=\\\"sql-lint\\\">{{ lintMessage }}</p>\\n                <mat-form-field class=\\\"wide sql-location\\\">\\n                  <mat-select placeholder=\\\"Processing location\\\" formControlName=\\\"location\\\" ([ngModel])=\\\"model\\\"\\n                    matTooltip=\\\"Select processing location.\\\" matTooltipPosition=\\\"after\\\">\\n                    <mat-option value=\\\"\\\">Auto-select</mat-option>\\n                    <mat-option value=\\\"US\\\">United States (US)</mat-option>\\n                    <mat-option value=\\\"EU\\\">European Union (EU)</mat-option>\\n                    <mat-option value=\\\"us-east4\\\">Northern Virginia (us-east4)</mat-option>\\n                    <mat-option value=\\\"northamerica-northeast1\\\">Montréal (northamerica-northeast1)</mat-option>\\n                    <mat-option value=\\\"europe-west2\\\">London (europe-west2)</mat-option>\\n                    <mat-option value=\\\"europe-north1\\\">Finland (europe-north1)</mat-option>\\n                    <mat-option value=\\\"asia-south1\\\">Mumbai (asia-south1)</mat-option>\\n                    <mat-option value=\\\"asia-southeast1\\\">Singapore (asia-southeast1)</mat-option>\\n                    <mat-option value=\\\"asia-east1\\\">Taiwan (asia-east1)</mat-option>\\n                    <mat-option value=\\\"asia-northeast1\\\">Tokyo (asia-northeast1)</mat-option>\\n                    <mat-option value=\\\"australia-southeast1\\\">Sydney (australia-southeast1)</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </form>\\n          </mat-step>\\n\\n          <mat-step [stepControl]=\\\"schemaFormGroup\\\" label=\\\"Data\\\">\\n            <div style=\\\"margin-bottom: 2em\\\">\\n              <button mat-raised-button color=\\\"primary\\\" matStepperNext>Add styles</button>\\n            </div>\\n            <form [formGroup]=\\\"schemaFormGroup\\\">\\n              <mat-form-field class=\\\"wide\\\">\\n                <mat-select placeholder=\\\"Geometry column\\\" formControlName=\\\"geoColumn\\\" ([ngModel])=\\\"model\\\"\\n                  matTooltip=\\\"Select field containing WKT-formatted geometry\\\" matTooltipPosition=\\\"after\\\">\\n                  <mat-option *ngFor=\\\"let column of geoColumnNames\\\" [value]=\\\"column\\\">{{ column }}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-table *ngIf=\\\"data\\\" [dataSource]=\\\"data\\\" class=\\\"result-table\\\">\\n                <ng-container *ngFor=\\\"let column of columnNames; let i = index\\\" [matColumnDef]=\\\"column\\\">\\n                  <mat-header-cell *matHeaderCellDef>\\n                    <div class=\\\"header-cell-title\\\">{{ column }}</div>\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\" class=\\\"result-table-cell\\\" [title]=\\\"row[column]\\\">{{ row[column] }}\\n                  </mat-cell>\\n                </ng-container>\\n                <mat-header-row *matHeaderRowDef=\\\"columnNames\\\" [ngStyle]=\\\"{'min-width': getRowWidth()}\\\">\\n                </mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: columnNames;\\\" [ngStyle]=\\\"{'min-width': getRowWidth()}\\\"></mat-row>\\n              </mat-table>\\n            </form>\\n          </mat-step>\\n\\n          <mat-step [stepControl]=\\\"stylesFormGroup\\\" label=\\\"Style\\\">\\n            <form [formGroup]=\\\"stylesFormGroup\\\">\\n              <mat-accordion class=\\\"styles-prop-list\\\">\\n                <mat-expansion-panel *ngFor=\\\"let prop of StyleProps\\\" [formGroupName]=\\\"prop.name\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>{{ prop.name }}</mat-panel-title>\\n                    <mat-panel-description>\\n                      <span *ngIf=\\\"getPropStatus(prop.name) === 'computed'\\\"\\n                        class=\\\"rule-badge computed\\\">data-driven</span>\\n                      <span *ngIf=\\\"getPropStatus(prop.name) === 'global'\\\" class=\\\"rule-badge global\\\">global</span>\\n                      <span *ngIf=\\\"getPropStatus(prop.name) === 'none'\\\" class=\\\"rule-badge none\\\">none</span>\\n                    </mat-panel-description>\\n                  </mat-expansion-panel-header>\\n                  <app-rule-input [prop]=\\\"prop\\\" [columns]=\\\"columnNames\\\" [stats]=\\\"getPropStats(prop.name)\\\"\\n                    [formGroup]=\\\"getPropFormGroup(prop.name)\\\"></app-rule-input>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onApplyStylesClicked()\\\"\\n                class=\\\"apply-style-button\\\">Apply Style</button>\\n            </form>\\n          </mat-step>\\n          <mat-step [stepControl]=\\\"sharingFormGroup\\\" label=\\\"Share\\\">\\n            <p class=\\\"sql-caption\\\"> <b>IMPORTANT:</b>\\n              Creating a sharing link will save information about the query and style settings. Any user with the link\\n              can restore these settings. However, results returned by the query will not be stored, and the the ability\\n              to execute the query and view the results is restricted to users with the necessary permissions on the\\n              selected Google Cloud Platform project. Sharing links remain active for 30 days.\\n            </p>\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"create-share-link-button\\\" [disabled]=\\\"!sharingDataChanged\\\"\\n              (click)=\\\"generateSharingUrl()\\\">Create Share Link</button>\\n            <mat-progress-spinner *ngIf=\\\"sharingIdGenerationPending\\\" mode=\\\"indeterminate\\\" [diameter]=\\\"24\\\"\\n              [strokeWidth]=\\\"4\\\"></mat-progress-spinner>\\n            <form *ngIf=\\\"generatedSharingId !== ''\\\" [formGroup]=\\\"sharingFormGroup\\\">\\n              <mat-form-field class=\\\"sql-form-field\\\">\\n                <input type=\\\"text\\\" matInput formControlName=\\\"sharingUrl\\\" ([ngModel])=\\\"model\\\" readonly>\\n              </mat-form-field>\\n            </form>\\n          </mat-step>\\n        </mat-vertical-stepper>\\n      </section>\\n    </mat-sidenav>\\n  </mat-sidenav-container>\\n\\n  <!-- Lower-left corner buttons. -->\\n  <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"toggle-button\\\" color=\\\"primary\\\">\\n    <mat-icon aria-label=\\\"Toggle sidebar\\\">\\n      <img src=\\\"https://www.gstatic.com/images/icons/material/system/1x/vertical_split_white_24dp.png\\\" srcset=\\\"https://www.gstatic.com/images/icons/material/system/1x/vertical_split_white_24dp.png 1x,\\n              https://www.gstatic.com/images/icons/material/system/2x/vertical_split_white_24dp.png 2x\\\"\\n        alt=\\\"Toggle sidebar\\\">\\n    </mat-icon>\\n  </button>\\n  <button mat-icon-button (click)=\\\"onFillPreset()\\\" class=\\\"preset-button\\\" color=\\\"primary\\\">\\n    <mat-icon aria-label=\\\"Fill magic presets\\\">\\n      <img src=\\\"https://www.gstatic.com/images/icons/material/system/1x/auto_fix_white_24dp.png\\\"\\n           srcset=\\\"https://www.gstatic.com/images/icons/material/system/1x/auto_fix_white_24dp.png 1x,\\n                   https://www.gstatic.com/images/icons/material/system/2x/auto_fix_white_24dp.png 2x\\\"\\n        alt=\\\"magic wand\\\">\\n    </mat-icon>\\n  </button>\\n</div>\\n\"","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectorRef, Inject, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { LOCAL_STORAGE, WebStorageService } from 'angular-webstorage-service';\nimport { MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/map';\nimport * as CryptoJS from \"crypto-js\";\n\nimport { StyleProps, StyleRule } from '../services/styles.service';\nimport {\n  BigQueryService,\n  BigQueryColumn,\n  ColumnStat,\n  Project,\n  BigQueryDryRunResponse,\n  BigQueryResponse\n} from '../services/bigquery.service';\n\nimport { FirestoreService, ShareableData } from '../services/firestore.service'\nimport {\n  Step,\n  SAMPLE_QUERY,\n  SAMPLE_FILL_COLOR,\n  SAMPLE_FILL_OPACITY,\n  MAX_RESULTS_PREVIEW,\n  SAMPLE_CIRCLE_RADIUS,\n  SHARING_VERSION,\n  MAX_RESULTS,\n  MAX_PAGES\n\n} from '../app.constants';\n\nconst DEBOUNCE_MS = 1000;\nconst USER_QUERY_START_MARKER = '--__USER__QUERY__START__';\nconst USER_QUERY_END_MARKER = '--__USER__QUERY__END__';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\n\nexport class MainComponent implements OnInit, OnDestroy {\n  readonly title = 'BigQuery Geo Viz';\n  readonly StyleProps = StyleProps;\n  readonly projectIDRegExp = new RegExp('^[a-z][a-z0-9\\.:-]*$', 'i');\n  readonly datasetIDRegExp = new RegExp('^[_a-z][a-z_0-9]*$', 'i');\n  readonly tableIDRegExp = new RegExp('^[a-z][a-z_0-9]*$', 'i');\n  readonly jobIDRegExp = new RegExp('[a-z0-9_-]*$', 'i');\n  readonly localStorageKey = 'execution_local_storage_key';\n\n  // GCP session data\n  readonly dataService = new BigQueryService();\n  readonly storageService = new FirestoreService();\n  isSignedIn: boolean;\n  user: Object;\n  matchingProjects: Array<Project> = [];\n\n  // Form groups\n  dataFormGroup: FormGroup;\n  schemaFormGroup: FormGroup;\n  stylesFormGroup: FormGroup;\n  sharingFormGroup: FormGroup;\n\n  // BigQuery response data\n  columns: Array<Object>;\n  columnNames: Array<string>;\n  geoColumnNames: Array<string>;\n  projectID = '';\n  dataset = '';\n  table = '';\n  jobID = '';\n  location = '';\n  // This contains the query that ran in the job.\n  jobWrappedSql = '';\n  bytesProcessed: number = 0;\n  lintMessage = '';\n  pending = false;\n  rows: Array<Object>;\n  totalRows: number = 0;\n  maxRows: number = MAX_RESULTS;\n  data: MatTableDataSource<Object>;\n  stats: Map<String, ColumnStat> = new Map();\n  sideNavOpened: boolean = true;\n  // If a new query is run or the styling has changed, we need to generate a new sharing id.\n  sharingDataChanged = false;\n  // Track if the stepper has actually changed.\n  stepperChanged = false;\n  sharingId = '';  // This is the input sharing Id from the url\n  generatedSharingId = ''; // This is the sharing id generated for the current settings.\n  sharingIdGenerationPending = false;\n\n  // UI state\n  stepIndex: Number = 0;\n\n  // Current style rules\n  styles: Array<StyleRule> = [];\n\n  // CodeMirror configuration\n  readonly cmConfig = {\n    indentWithTabs: true,\n    smartIndent: true,\n    lineNumbers: true,\n    lineWrapping: true\n  };\n  readonly cmDebouncer: Subject<string> = new Subject();\n  cmDebouncerSub: Subscription;\n\n  constructor(\n    @Inject(LOCAL_STORAGE) private _storage: WebStorageService,\n    private _formBuilder: FormBuilder,\n    private _snackbar: MatSnackBar,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _route: ActivatedRoute,\n    private _ngZone: NgZone) {\n\n    // Debounce CodeMirror change events to avoid running extra dry runs.\n    this.cmDebouncerSub = this.cmDebouncer\n      .debounceTime(DEBOUNCE_MS)\n      .subscribe((value: string) => { this._dryRun(); });\n\n    // Set up BigQuery service.\n    this.dataService.onSigninChange(() => this.onSigninChange());\n    this.dataService.init()\n      .catch((e) => this.showMessage(parseErrorMessage(e)));\n  }\n\n  ngOnInit() {\n    this.columns = [];\n    this.columnNames = [];\n    this.geoColumnNames = [];\n    this.rows = [];\n\n    // Read parameters from URL\n    this.projectID = this._route.snapshot.paramMap.get(\"project\");\n    this.dataset = this._route.snapshot.paramMap.get(\"dataset\");\n    this.table = this._route.snapshot.paramMap.get(\"table\");\n    this.jobID = this._route.snapshot.paramMap.get(\"job\");\n    this.location = this._route.snapshot.paramMap.get(\"location\") || ''; // Empty string for 'Auto Select'\n    this.sharingId = this._route.snapshot.queryParams[\"shareid\"];\n\n    // Data form group\n    this.dataFormGroup = this._formBuilder.group({\n      projectID: ['', Validators.required],\n      sql: ['', Validators.required],\n      location: [''],\n    });\n    this.dataFormGroup.controls.projectID.valueChanges.debounceTime(200).subscribe(() => {\n      this.dataService.getProjects()\n        .then((projects) => {\n          this.matchingProjects = projects.filter((project) => {\n            return project['id'].indexOf(this.dataFormGroup.controls.projectID.value) >= 0;\n          });\n        });\n    });\n\n    // Schema form group\n    this.schemaFormGroup = this._formBuilder.group({ geoColumn: [''] });\n\n    // Style rules form group\n    const stylesGroupMap = {};\n    StyleProps.forEach((prop) => stylesGroupMap[prop.name] = this.createStyleFormGroup());\n    this.stylesFormGroup = this._formBuilder.group(stylesGroupMap);\n\n    // Sharing form group\n    this.sharingFormGroup = this._formBuilder.group({\n      sharingUrl: '',\n    });\n\n    // Initialize default styles.\n    this.updateStyles();\n  }\n\n  saveDataToSharedStorage() {\n    const dataValues = this.dataFormGroup.getRawValue();\n    // Encrypt the style values using the sql string.\n    const hashedStyleValues = CryptoJS.AES.encrypt(JSON.stringify(this.styles), this.jobWrappedSql + this.bytesProcessed);\n    const shareableData = {\n      sharingVersion: SHARING_VERSION,\n      projectID: dataValues.projectID,\n      jobID: this.jobID,\n      location: dataValues.location,\n      styles: hashedStyleValues.toString(),\n      creationTimestampMs: Date.now()\n    };\n    return this.storageService.storeShareableData(shareableData).then((written_doc_id) => {\n      this.generatedSharingId = written_doc_id;\n    })\n  }\n\n  restoreDataFromSharedStorage(docId: string): Promise<ShareableData> {\n    return this.storageService.getSharedData(this.sharingId);\n  }\n\n  saveDataToLocalStorage(projectID: string, sql: string, location: string) {\n    this._storage.set(this.localStorageKey, { projectID: projectID, sql: sql, location: location });\n  }\n\n  loadDataFromLocalStorage(): { projectID: string, sql: string, location: string } {\n    return this._storage.get(this.localStorageKey);\n  }\n\n  clearDataFromLocalStorage() {\n    this._storage.remove(this.localStorageKey);\n  }\n\n  resetUIOnSingout() {\n    this.clearDataFromLocalStorage();\n    this.dataFormGroup.reset();\n    this.lintMessage = '';\n  }\n\n  ngOnDestroy() {\n    this.cmDebouncerSub.unsubscribe();\n  }\n\n  signin() {\n    this.clearDataFromLocalStorage();\n    this.dataService.signin();\n  }\n\n  signout() {\n    this.resetUIOnSingout();\n    this.dataService.signout();\n  }\n\n  onSigninChange() {\n    this._ngZone.run(() => {\n      this.isSignedIn = this.dataService.isSignedIn;\n      if (!this.dataService.isSignedIn) { return; }\n      this.user = this.dataService.getUser();\n      this.storageService.authorize(this.dataService.getCredential());\n      this.dataService.getProjects()\n        .then((projects) => {\n          this.matchingProjects = projects;\n          this._changeDetectorRef.detectChanges();\n        });\n\n      if (this._hasJobParams() && this._jobParamsValid()) {\n        this.dataFormGroup.patchValue({\n          sql: '/* Loading sql query from job... */',\n          projectID: this.projectID,\n          location: this.location\n        });\n\n        this.dataService.getQueryFromJob(this.jobID, this.location, this.projectID).then((queryText) => {\n          this.dataFormGroup.patchValue({\n            sql: queryText.sql,\n          });\n        });\n      } else if (this._hasTableParams() && this._tableParamsValid()) {\n        this.dataFormGroup.patchValue({\n          sql: `SELECT * FROM \\`${this.projectID}.${this.dataset}.${this.table}\\`;`,\n          projectID: this.projectID,\n        });\n      } else if (this.sharingId) {\n        this.restoreDataFromSharedStorage(this.sharingId).then((shareableValues) => {\n          this.applyRetrievedSharingValues(shareableValues);\n        }).catch((e) => this.showMessage(parseErrorMessage(e)));\n      } else {\n        const localStorageValues = this.loadDataFromLocalStorage();\n        if (localStorageValues) {\n          this.dataFormGroup.patchValue({\n            sql: localStorageValues.sql,\n            projectID: localStorageValues.projectID,\n            location: localStorageValues.location\n          });\n        }\n      }\n    });\n  }\n\n  applyRetrievedSharingValues(shareableValues: ShareableData) {\n    if (shareableValues) {\n      if (shareableValues.sharingVersion != SHARING_VERSION) {\n        throw new Error('Sharing link is invalid.');\n      }\n      this.dataFormGroup.patchValue({\n        sql: '/* Loading sql query from job... */',\n        projectID: shareableValues.projectID,\n        location: shareableValues.location\n      });\n      this.dataService.getQueryFromJob(shareableValues.jobID, shareableValues.location, shareableValues.projectID).then((queryText) => {\n        this.dataFormGroup.patchValue({\n          sql: this.convertToUserQuery(queryText.sql),\n        });\n        const unencryptedStyles = JSON.parse(CryptoJS.enc.Utf8.stringify(CryptoJS.AES.decrypt(shareableValues.styles, queryText.sql + queryText.bytesProcessed)));\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.fillColor, unencryptedStyles['fillColor'].domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.fillOpacity, unencryptedStyles['fillOpacity'].domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.strokeColor, unencryptedStyles['strokeColor'].domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.strokeOpacity, unencryptedStyles['strokeOpacity'].domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.strokeWeight, unencryptedStyles['strokeWeight'].domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.circleRadius, unencryptedStyles['circleRadius'].domain.length);\n        this.stylesFormGroup.patchValue(unencryptedStyles);\n        this.updateStyles();\n      }).catch((e) => this.showMessage(\"Cannot retrieve styling options.\"));\n    }\n  }\n\n  clearGeneratedSharingUrl() {\n    this.generatedSharingId = '';\n    this.sharingDataChanged = true;\n    this.sharingFormGroup.patchValue({\n      sharingUrl: ''\n    });\n  }\n\n  generateSharingUrl() {\n    if (!this._hasJobParams()) {\n      this.showMessage(\"Please first run a valid query before generating a sharing URL.\");\n      return;\n    }\n    if (this.stepIndex == Step.SHARE && this.stepperChanged && this.sharingDataChanged) {\n      this.sharingDataChanged = false;\n      this.sharingIdGenerationPending = true;\n      this.saveDataToSharedStorage().then(() => {\n        this.sharingFormGroup.patchValue({\n          sharingUrl: window.location.origin + '?shareid=' + this.generatedSharingId\n        });\n      }).catch((e) => this.showMessage(parseErrorMessage(e)));\n    }\n    this.sharingIdGenerationPending = false;\n  }\n\n  onStepperChange(e: StepperSelectionEvent) {\n    this.stepIndex = e.selectedIndex;\n    if (e.selectedIndex != e.previouslySelectedIndex) {\n      this.stepperChanged = true;\n    } else {\n      this.stepperChanged = false;\n    }\n    gtag('event', 'step', { event_label: `step ${this.stepIndex}` });\n  }\n\n  dryRun() {\n    this.cmDebouncer.next();\n  }\n\n  _hasJobParams(): boolean {\n    return !!(this.jobID && this.projectID);\n  }\n\n  _hasTableParams(): boolean {\n    return !!(this.projectID && this.dataset && this.table);\n  }\n\n  _jobParamsValid(): boolean {\n    return this.projectIDRegExp.test(this.projectID) &&\n      this.jobIDRegExp.test(this.jobID);\n  }\n  _tableParamsValid(): boolean {\n    return this.projectIDRegExp.test(this.projectID) &&\n      this.datasetIDRegExp.test(this.dataset) &&\n      this.tableIDRegExp.test(this.table);\n  }\n\n  _dryRun(): Promise<BigQueryDryRunResponse> {\n    const { projectID, sql, location } = this.dataFormGroup.getRawValue();\n    if (!projectID) return;\n    const dryRun = this.dataService.prequery(projectID, sql, location)\n      .then((response: BigQueryDryRunResponse) => {\n        if (!response.ok) throw new Error('Query analysis failed.');\n        const geoColumn = response.schema.fields.find((f) => f.type === 'GEOGRAPHY');\n        if (response.statementType !== 'SELECT') {\n          throw new Error('Expected a SELECT statement.');\n        } else if (!geoColumn) {\n          throw new Error('Expected a geography column, but found none.');\n        }\n        this.lintMessage = '';\n        this.bytesProcessed = response.totalBytesProcessed;\n        return response;\n      });\n    dryRun.catch((e) => {\n      this.bytesProcessed = -1;\n      this.lintMessage = parseErrorMessage(e);\n    });\n    return dryRun;\n  }\n\n  // 'count' is used to track the number of request. Each request is 10MB.\n  getResults(count: number, projectID: string, inputPageToken: string, location: string, jobID: string): Promise<BigQueryResponse> {\n    if (!inputPageToken || count >= MAX_PAGES) {\n      // Force an update feature here since everything is done.\n      this.rows = this.rows.slice(0);\n      return;\n    }\n    count = count + 1;\n    return this.dataService.getResults(projectID, jobID, location, inputPageToken, this.columns, this.stats).then(({ rows, stats, pageToken }) => {\n      this.rows.push(...rows);\n      this.stats = stats;\n      this._changeDetectorRef.detectChanges();\n      return this.getResults(count, projectID, pageToken, location, jobID);\n    });\n  }\n\n  convertToUserQuery(geovizQuery: string): string {\n    if (!geovizQuery) return '';\n\n    const lines = geovizQuery.split('\\n');\n    let userQueryStarted = false;\n    let userQuery = '';\n    lines.forEach((line) => {\n      if (line.includes(USER_QUERY_START_MARKER)) {\n        userQueryStarted = true;\n      } else if (line.includes(USER_QUERY_END_MARKER)) {\n        userQueryStarted = false;\n      } else {\n        if (userQueryStarted) {\n          userQuery += line + '\\n';\n        }\n      }\n    });\n\n    return userQuery.trim();\n  }\n\n  convertToGeovizQuery(userQuery: string, geoColumns: BigQueryColumn[], numCols: number): string {\n    const hasNonGeoColumns = geoColumns.length < numCols;\n    const nonGeoClause = hasNonGeoColumns\n      ? `* EXCEPT(${geoColumns.map((f) => `\\`${f.name}\\``).join(', ')}),`\n      : '';\n    return `SELECT\n  ${nonGeoClause}\n  ${ geoColumns.map((f) => `ST_AsGeoJson(\\`${f.name}\\`) as \\`${f.name}\\``).join(', ')}\nFROM (\n${USER_QUERY_START_MARKER}\\n\n${userQuery.replace(/;\\s*$/, '')}\\n\n${USER_QUERY_END_MARKER}\\n\n);`;\n  }\n\n  query() {\n    if (this.pending) { return; }\n    this.pending = true;\n\n    // We will save the query information to local store to be restored next\n    // time that the app is launched.\n    const dataFormValues = this.dataFormGroup.getRawValue();\n    this.projectID = dataFormValues.projectID;\n    const sql = dataFormValues.sql;\n    this.location = dataFormValues.location;\n    this.saveDataToLocalStorage(this.projectID, sql, this.location);\n\n    // Clear the existing sharing URL.\n    this.clearGeneratedSharingUrl();\n\n    let geoColumns;\n\n    this._dryRun()\n      .then((dryRunResponse) => {\n        geoColumns = dryRunResponse.schema.fields.filter((f) => f.type === 'GEOGRAPHY');\n\n        // Wrap the user's SQL query, replacing geography columns with GeoJSON.\n        this.jobWrappedSql = this.convertToGeovizQuery(sql, geoColumns, dryRunResponse.schema.fields.length);\n        return this.dataService.query(this.projectID, this.jobWrappedSql, this.location);\n      })\n      .then(({ columns, columnNames, rows, stats, totalRows, pageToken, jobID, totalBytesProcessed }) => {\n        this.columns = columns;\n        this.columnNames = columnNames;\n        this.geoColumnNames = geoColumns.map((f) => f.name);\n        this.rows = rows;\n        this.stats = stats;\n        this.data = new MatTableDataSource(rows.slice(0, MAX_RESULTS_PREVIEW));\n        this.schemaFormGroup.patchValue({ geoColumn: geoColumns[0].name });\n        this.totalRows = totalRows;\n        this.jobID = jobID;\n        this.bytesProcessed = totalBytesProcessed;\n        return this.getResults(0, this.projectID, pageToken, this.location, jobID);\n      })\n      .catch((e) => {\n        const error = e && e.result && e.result.error || {};\n        if (error.status === 'INVALID_ARGUMENT' && error.message.match(/^Unrecognized name: f\\d+_/)) {\n          this.showMessage(\n            'Geography columns must provide a name. For example, \"SELECT ST_GEOGPOINT(1,2)\" could ' +\n            'be changed to \"SELECT ST_GEOGPOINT(1,2) geo\".'\n          );\n        } else {\n          this.showMessage(parseErrorMessage(e));\n        }\n      })\n      .then(() => {\n        this.pending = false;\n        this._changeDetectorRef.detectChanges();\n      });\n\n  }\n\n  onApplyStylesClicked() {\n    this.clearGeneratedSharingUrl();\n    this.updateStyles();\n  }\n\n  updateStyles() {\n    if (this.stylesFormGroup.invalid) { return; }\n    this.styles = this.stylesFormGroup.getRawValue();\n  }\n\n  getRowWidth() {\n    return (this.columns.length * 100) + 'px';\n  }\n\n  onFillPreset() {\n    switch (this.stepIndex) {\n      case Step.DATA:\n        this.dataFormGroup.patchValue({ sql: SAMPLE_QUERY });\n        break;\n      case Step.SCHEMA:\n        this.schemaFormGroup.patchValue({ geoColumn: 'WKT' });\n        break;\n      case Step.STYLE:\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.fillColor, SAMPLE_FILL_COLOR.domain.length);\n        this.setNumStops(<FormGroup>this.stylesFormGroup.controls.circleRadius, SAMPLE_CIRCLE_RADIUS.domain.length);\n        this.stylesFormGroup.controls.fillOpacity.patchValue(SAMPLE_FILL_OPACITY);\n        this.stylesFormGroup.controls.fillColor.patchValue(SAMPLE_FILL_COLOR);\n        this.stylesFormGroup.controls.circleRadius.patchValue(SAMPLE_CIRCLE_RADIUS);\n        break;\n      default:\n        console.warn(`Unexpected step index, ${this.stepIndex}.`);\n    }\n\n    gtag('event', 'preset', { event_label: `step ${this.stepIndex}` });\n  }\n\n  setNumStops(group: FormGroup, numStops: number): void {\n    const domain = <FormArray>group.controls.domain;\n    const range = <FormArray>group.controls.range;\n    while (domain.length !== numStops) {\n      if (domain.length < numStops) {\n        domain.push(new FormControl(''));\n        range.push(new FormControl(''));\n      }\n      if (domain.length > numStops) {\n        domain.removeAt(domain.length - 1);\n        range.removeAt(range.length - 1);\n      }\n    }\n  }\n\n  createStyleFormGroup(): FormGroup {\n    return this._formBuilder.group({\n      isComputed: [false],\n      value: [''],\n      property: [''],\n      function: [''],\n      domain: this._formBuilder.array([[''], ['']]),\n      range: this._formBuilder.array([[''], ['']])\n    });\n  }\n\n  getPropStatus(propName: string): string {\n    const rule = <StyleRule>this.stylesFormGroup.controls[propName].value;\n    if (!rule.isComputed && rule.value) { return 'global'; }\n    if (rule.isComputed && rule.function) { return 'computed'; }\n    return 'none';\n  }\n\n  getPropStats(propName: string): ColumnStat {\n    const group = <FormGroup>this.stylesFormGroup.controls[propName];\n    const rawValue = group.value;\n    if (!rawValue.property) { return null; }\n    return this.stats.get(rawValue.property);\n  }\n\n  getPropFormGroup(propName: string): FormGroup {\n    return <FormGroup>this.stylesFormGroup.controls[propName];\n  }\n\n  showMessage(message: string, duration: number = 5000) {\n    console.warn(message);\n    this._ngZone.run(() => {\n      this._snackbar.open(message, undefined, { duration: duration });\n    });\n  }\n}\n\nfunction parseErrorMessage(e, defaultMessage = 'Something went wrong') {\n  if (e.message) { return e.message; }\n  if (e.result && e.result.error && e.result.error.message) {\n    return e.result.error.message;\n  }\n  return defaultMessage;\n}\n","module.exports = \":host,\\n.map {\\n    width: 100%;\\n    height: 100%;\\n    min-width: 45vw;\\n    min-height: calc(100vh - 64px);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLCtCQUErQjtDQUNsQyIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0LFxuLm1hcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi13aWR0aDogNDV2dztcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gNjRweCk7XG59XG4iXX0= */\"","module.exports = \"<div #mapEl class=\\\"map\\\"></div>\"","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ElementRef, Input, NgZone, ViewChild, AfterViewInit, IterableDiffers, IterableDiffer } from '@angular/core';\nimport { StylesService, StyleRule } from '../services/styles.service';\nimport { GeoJsonLayer } from '@deck.gl/layers';\nimport { GoogleMapsOverlay } from '@deck.gl/google-maps';\nimport bbox from '@turf/bbox';\nimport { GeoJSONService, GeoJSONFeature } from '../services/geojson.service';\n\nconst LAYER_ID = 'geojson-layer';\n\nconst INITIAL_VIEW_STATE = { latitude: 45, longitude: 0, zoom: 2, pitch: 0 };\n\nconst DEFAULT_BATCH_SIZE = 5;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements AfterViewInit {\n  // DOM element for map.\n  @ViewChild('mapEl') mapEl: ElementRef;\n\n  // Maps API instance.\n  map: google.maps.Map;\n\n  // Info window for display over Maps API.\n  infoWindow: google.maps.InfoWindow;\n\n  // Basemap styles.\n  pendingStyles: Promise<google.maps.MapTypeStyle[]>;\n\n  // Styling service.\n  readonly styler = new StylesService();\n\n  private _rows: object[] = [];\n  private _features: GeoJSONFeature[] = [];\n  private _styles: StyleRule[] = [];\n  private _geoColumn: string;\n  private _activeGeometryTypes = new Set<string>();\n\n  // Detects how many times we have received new values.      \n  private _numChanges = 0;\n  // Counts after how many changes we should update the map.\n  private _batchSize = DEFAULT_BATCH_SIZE;\n\n  private _deckLayer: GoogleMapsOverlay = null;\n  private _iterableDiffer = null;\n\n  @Input()\n  set rows(rows: object[]) {\n    this._rows = rows;\n    this.resetBatching();\n    this.updateFeatures();\n    this.updateStyles();\n  }\n\n  @Input()\n  set geoColumn(geoColumn: string) {\n    this._geoColumn = geoColumn;\n    this.updateFeatures();\n    this.updateStyles();\n  }\n\n  @Input()\n  set styles(styles: StyleRule[]) {\n    this._styles = styles;\n    this.updateStyles();\n  }\n\n  constructor(private _ngZone: NgZone, iterableDiffers: IterableDiffers) {\n    this._iterableDiffer = iterableDiffers.find([]).create(null);\n    this.pendingStyles = fetch('assets/basemap.json', { credentials: 'include' })\n      .then((response) => response.json());\n  }\n\n  ngDoCheck() {\n    let changes = this._iterableDiffer.diff(this._rows);\n    if (changes) {\n      this._numChanges++;\n      if (this._numChanges >= this._batchSize) {\n        this.updateFeatures();\n        this.updateStyles();\n        this._numChanges = 0;\n        // Increase the batch size incrementally to keep the overhead low.\n        this._batchSize = this._batchSize * 1.5;\n      }\n    }\n  }\n\n  /**\n     * Constructs a Maps API instance after DOM has initialized.\n     */\n  ngAfterViewInit() {\n    Promise.all([pendingMap, this.pendingStyles])\n      .then(([_, mapStyles]) => {\n        // Initialize Maps API outside of the Angular zone. Maps API binds event listeners,\n        // and we do NOT want Angular to trigger change detection on these events. Ensuring\n        // that Maps API interaction doesn't trigger change detection improves performance.\n        // See: https://blog.angularindepth.com/boosting-performance-of-angular-applications-with-manual-change-detection-42cb396110fb\n        this._ngZone.runOutsideAngular(() => {\n          this.map = new google.maps.Map(this.mapEl.nativeElement, {\n            center: { lat: INITIAL_VIEW_STATE.latitude, lng: INITIAL_VIEW_STATE.longitude },\n            zoom: INITIAL_VIEW_STATE.zoom,\n            tilt: 0\n          });\n          this.map.setOptions({ styles: mapStyles });\n          this.infoWindow = new google.maps.InfoWindow({ content: '' });\n          this.map.data.addListener('click', (e) => {\n            this.showInfoWindow(e.feature, e.latLng);\n          });\n          this._deckLayer = new GoogleMapsOverlay({ layers: [] });\n          this._deckLayer.setMap(this.map);\n          this.map.addListener('click', (e) => this._onClick(e));\n        });\n      });\n  }\n\n  _onClick(e: google.maps.MouseEvent) {\n    // TODO(donmccurdy): Do we need a public API for determining when layer is ready?\n    if (!this._deckLayer._deck.layerManager) return;\n\n    const { x, y } = e['pixel'];\n    const picked = this._deckLayer.pickObject({ x, y, radius: 4 });\n\n    if (picked) {\n      this.showInfoWindow(picked.object, e.latLng);\n    }\n  }\n\n  private resetBatching() {\n    this._numChanges = 0;\n    this._batchSize = DEFAULT_BATCH_SIZE;\n  }\n\n  /**\n   * Converts row objects into GeoJSON, then loads into Maps API.\n   */\n  updateFeatures() {\n    if (!this.map) return;\n\n    this._features = GeoJSONService.rowsToGeoJSON(this._rows, this._geoColumn);\n\n    // Note which types of geometry are being shown.\n    this._activeGeometryTypes.clear();\n    this._features.forEach((feature) => {\n      this._activeGeometryTypes.add(feature.geometry['type']);\n    });\n\n    // Fit viewport bounds to the data.\n    const [minX, minY, maxX, maxY] = bbox({ type: 'FeatureCollection', features: this._features });\n    const bounds = new google.maps.LatLngBounds(\n      new google.maps.LatLng(minY, minX),\n      new google.maps.LatLng(maxY, maxX)\n    );\n    if (!bounds.isEmpty()) { this.map.fitBounds(bounds); }\n  }\n\n  /**\n   * Updates styles applied to all GeoJSON features.\n   */\n  updateStyles() {\n    if (!this.map) return;\n    this.styler.uncache();\n\n    // Remove old features.\n    this._deckLayer.setProps({ layers: [] });\n\n    // Create GeoJSON layer.\n    const colorRe = /(\\d+), (\\d+), (\\d+)/;\n    const layer = new GeoJsonLayer({\n      id: LAYER_ID,\n      data: this._features,\n      pickable: true,\n      autoHighlight: true,\n      highlightColor: [219, 68, 55], // #DB4437\n      stroked: this.hasStroke(),\n      filled: true,\n      extruded: false,\n      elevationScale: 0,\n      lineWidthUnits: 'pixels',\n      pointRadiusMinPixels: 1,\n      getFillColor: (d) => {\n        let color = this.getStyle(d, this._styles, 'fillColor');\n        if (typeof color === 'string') color = color.match(colorRe).slice(1, 4).map(Number);\n        const opacity = this.getStyle(d, this._styles, 'fillOpacity');\n        return [...color, opacity * 256];\n      },\n      getLineColor: (d) => {\n        let color = this.getStyle(d, this._styles, 'strokeColor');\n        if (typeof color === 'string') color = color.match(colorRe).slice(1, 4).map(Number);\n        const opacity = this.getStyle(d, this._styles, 'strokeOpacity');\n        return [...color, opacity * 256];\n      },\n      getLineWidth: (d) => this.getStyle(d, this._styles, 'strokeWeight'),\n      getRadius: (d) => this.getStyle(d, this._styles, 'circleRadius'),\n    });\n\n    this._deckLayer.setProps({ layers: [layer] });\n  }\n\n  /**\n   * Return a given style for a given feature.\n   * @param feature\n   * @param style\n   */\n  getStyle(feature, styles: StyleRule[], styleName: string) {\n    return this.styler.parseStyle(styleName, feature['properties'], styles[styleName]);\n  }\n\n  /**\n   * Returns whether the style is currently enabled.\n   * @param styles\n   * @param styleName\n   */\n  hasStyle(styles: StyleRule[], styleName: string): boolean {\n    const rule = styles[styleName];\n    if (!rule) return false;\n    if (!rule.isComputed) return !!rule.value || rule.value === '0';\n    return rule.property && rule.function;\n  }\n\n  hasStroke() {\n    return this._activeGeometryTypes.has('LineString')\n      || this._activeGeometryTypes.has('MultiLineString')\n      || this._activeGeometryTypes.has('Polygon')\n      || this._activeGeometryTypes.has('MultiPolygon');\n  }\n\n  /**\n   * Displays info window for selected feature.\n   * @param feature\n   * @param latLng\n   */\n  showInfoWindow(feature: GeoJSONFeature, latLng: google.maps.LatLng) {\n    this.infoWindow.setContent(`<pre>${JSON.stringify(feature.properties, null, 2)}</pre>`);\n    this.infoWindow.open(this.map);\n    this.infoWindow.setPosition(latLng);\n  }\n}\n","module.exports = \"mat-slide-toggle {\\n    margin: 1em 0;\\n}\\n\\nmat-form-field {\\n    display: block;\\n    max-width: 250px;\\n}\\n\\n.array-field + .array-field {\\n    margin-top: 1em;\\n}\\n\\n.array-field-list {\\n    display: block;\\n}\\n\\n.array-field-item {\\n    position: relative;\\n}\\n\\n.array-field-input {\\n    border: 1px solid rgba(0, 0, 0, 0.32);\\n    height: 32px;\\n    line-height: 32px;\\n    display: inline-block;\\n    width: 72px;\\n    margin: 0.5em 0.5em 0.5em 0;\\n    padding: 0 1em;\\n    font-family: inherit;\\n    font-size: 1em;\\n    color: rgba(0, 0, 0, 0.54);\\n}\\n\\n.array-field-caption {\\n    position: absolute;\\n    bottom: -1.2em;\\n    font-size: 0.8em;\\n    color: #888;\\n}\\n\\n.array-field-swatch {\\n    display: inline-block;\\n    width: 20px;\\n    height: 20px;\\n    border-radius: 2px;\\n    position: absolute;\\n    right: 1em;\\n    top: 1em;\\n}\\n\\nbutton:not([disabled]) mat-icon.create {\\n    color: #33AC71;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcnVsZS9ydWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0NBQ2pCOztBQUVEO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGdCQUFnQjtDQUNuQjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxzQ0FBc0M7SUFDdEMsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLDRCQUE0QjtJQUM1QixlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZiwyQkFBMkI7Q0FDOUI7O0FBRUQ7SUFDSSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixZQUFZO0NBQ2Y7O0FBRUQ7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxTQUFTO0NBQ1o7O0FBRUQ7SUFDSSxlQUFlO0NBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcnVsZS9ydWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtc2xpZGUtdG9nZ2xlIHtcbiAgICBtYXJnaW46IDFlbSAwO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAyNTBweDtcbn1cblxuLmFycmF5LWZpZWxkICsgLmFycmF5LWZpZWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG59XG5cbi5hcnJheS1maWVsZC1saXN0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmFycmF5LWZpZWxkLWl0ZW0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFycmF5LWZpZWxkLWlucHV0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMzIpO1xuICAgIGhlaWdodDogMzJweDtcbiAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDcycHg7XG4gICAgbWFyZ2luOiAwLjVlbSAwLjVlbSAwLjVlbSAwO1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xufVxuXG4uYXJyYXktZmllbGQtY2FwdGlvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogLTEuMmVtO1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgY29sb3I6ICM4ODg7XG59XG5cbi5hcnJheS1maWVsZC1zd2F0Y2gge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMWVtO1xuICAgIHRvcDogMWVtO1xufVxuXG5idXR0b246bm90KFtkaXNhYmxlZF0pIG1hdC1pY29uLmNyZWF0ZSB7XG4gICAgY29sb3I6ICMzM0FDNzE7XG59XG4iXX0= */\"","module.exports = \"<section [formGroup]=\\\"formGroup\\\">\\n  <p>{{ prop.description }}</p>\\n  <mat-slide-toggle formControlName=\\\"isComputed\\\">\\n    Data-driven\\n  </mat-slide-toggle>\\n  <mat-form-field *ngIf=\\\"!_rule.isComputed\\\">\\n    <input matInput\\n          placeholder=\\\"Value\\\"\\n          formControlName=\\\"value\\\"\\n          matTooltip=\\\"Value of this style for all features\\\"\\n          matTooltipPosition=\\\"after\\\">\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"_rule.isComputed\\\">\\n    <mat-select placeholder=\\\"Function\\\"\\n                formControlName=\\\"function\\\"\\n                matTooltip=\\\"Function used to compute a style value from a field's values\\\"\\n                matTooltipPosition=\\\"after\\\">\\n      <mat-option value=\\\"\\\">None</mat-option>\\n      <mat-option *ngFor=\\\"let fn of StyleFunctions\\\"\\n                  [value]=\\\"fn.name\\\"\\n                  [disabled]=\\\"fn.disabled\\\"\\n                  [matTooltip]=\\\"fn.description\\\"\\n                  matTooltipPosition=\\\"after\\\">\\n        {{ fn.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"_rule.isComputed\\\">\\n    <mat-select placeholder=\\\"Field\\\"\\n                formControlName=\\\"property\\\"\\n                matTooltip=\\\"Field in data used as input to the styling function\\\"\\n                matTooltipPosition=\\\"after\\\">\\n      <mat-option value=\\\"\\\">None</mat-option>\\n      <mat-option  *ngFor=\\\"let column of columns;\\\" [value]=\\\"column\\\">\\n        {{ column }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <div class=\\\"array-field\\\" *ngIf=\\\"_rule.isComputed && getPropNeedsMapping()\\\">\\n    <label>Domain</label>\\n    <button mat-icon-button\\n            color=\\\"primary\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"addDomainRangeValue()\\\"\\n            style=\\\"margin-right: -10px;\\\">\\n      <mat-icon class=\\\"create\\\" aria-label=\\\"Add domain value\\\">add_circle</mat-icon>\\n    </button>\\n    <button mat-icon-button\\n            color=\\\"warn\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"removeDomainRangeValue()\\\">\\n      <mat-icon class=\\\"remove\\\" aria-label=\\\"Remove domain/range value\\\">remove_circle</mat-icon>\\n    </button>\\n    <div class=\\\"array-field-list\\\">\\n      <span *ngFor=\\\"let d of getDomainControls(); let i = index; let first = first; let last = last;\\\"\\n            class=\\\"array-field-item\\\">\\n        <input [formControl]=\\\"d\\\" class=\\\"array-field-input\\\">\\n        <span *ngIf=\\\"(first || last) && stats\\\"\\n              class=\\\"array-field-caption\\\">\\n          {{ first ? ('min: ' + stats.min) : ('max: ' + stats.max) }}\\n        </span>\\n      </span>\\n    </div>\\n  </div>\\n  <div class=\\\"array-field\\\" *ngIf=\\\"_rule.isComputed && getPropNeedsMapping()\\\">\\n    <label>Range</label>\\n    <button *ngIf=\\\"prop.type === 'color'\\\"\\n            mat-icon-button\\n            type=\\\"button\\\"\\n            (click)=\\\"addRandomColors()\\\"\\n            style=\\\"margin-right: -10px;\\\">\\n      <mat-icon class=\\\"create\\\" aria-label=\\\"Randomize colors\\\">refresh</mat-icon>\\n    </button>\\n    <div class=\\\"array-field-list\\\">\\n      <span *ngFor=\\\"let d of getRangeControls(); let i = index\\\" class=\\\"array-field-item\\\">\\n        <input *ngIf=\\\"prop.type !== 'color'\\\"\\n              [formControl]=\\\"d\\\"\\n              class=\\\"array-field-input\\\">\\n        <span *ngIf=\\\"prop.type === 'color'\\\"\\n              [(colorPicker)]=\\\"d.value\\\"\\n              [cpPresetColors]=\\\"['#edf8fb','#ccece6','#99d8c9','#66c2a4','#2ca25f','#006d2c']\\\"\\n              cpUseRootViewContainer=\\\"true\\\"\\n              cpPosition=\\\"top\\\"\\n              (colorPickerChange)=\\\"onColorChange()\\\"\\n              class=\\\"array-field-input\\\">\\n          {{d.value}}\\n        </span>\\n        <span *ngIf=\\\"prop.type === 'color'\\\" class=\\\"array-field-swatch\\\" [ngStyle]=\\\"{'background': d.value}\\\"></span>\\n      </span>\\n    </div>\\n  </div>\\n</section>\"","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS\n} from '@angular/forms';\nimport { StyleFunctions, StyleProp, StyleRule } from '../services/styles.service';\nimport { ColumnStat } from '../services/bigquery.service';\nimport { PALETTES } from '../app.constants';\n\n/**\n * Custom form control for a single style rule.\n */\n@Component({\n  selector: 'app-rule-input',\n  templateUrl: './rule.component.html',\n  styleUrls: ['./rule.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RuleInputComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => RuleInputComponent),\n      multi: true,\n    }\n  ]\n})\nexport class RuleInputComponent implements OnInit {\n  StyleFunctions = StyleFunctions;\n\n  @Input() formGroup: FormGroup;\n  @Input() prop: StyleProp;\n  @Input() stats: ColumnStat;\n  @Input() columns: Array<string> = [];\n\n  private _rule: StyleRule = {\n    isComputed: false,\n    value: '',\n    function: '',\n    property: '',\n    domain: [],\n    range: []\n  };\n\n  onChange = (rule: StyleRule) => {};\n  onTouched = (rule: StyleRule) => {};\n\n  public validate(c: FormControl) {\n    return null;\n  }\n\n  ngOnInit() {\n    // Reflect FormGroup changes to local object used to update view.\n    this.formGroup.valueChanges.subscribe(() => {\n      Object.assign(this._rule, this.formGroup.getRawValue());\n    });\n  }\n\n  writeValue(rule: StyleRule): void {\n    Object.assign(this._rule, rule);\n    this.formGroup.patchValue(rule);\n    this.onChange(rule);\n  }\n\n  registerOnChange(fn: (rule: StyleRule) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  getDomainControls(): AbstractControl[] {\n    const array = <FormArray> this.formGroup.controls.domain;\n    return array.controls;\n  }\n\n  getRangeControls(): AbstractControl[] {\n    const array = <FormArray> this.formGroup.controls.range;\n    return array.controls;\n  }\n\n  addDomainRangeValue() {\n    const control = new FormControl('');\n    const domainArray = <FormArray> this.formGroup.controls.domain;\n    const rangeArray = <FormArray> this.formGroup.controls.range;\n    domainArray.push(new FormControl(''));\n    rangeArray.push(new FormControl(''));\n  }\n\n  removeDomainRangeValue():  void {\n    const domain = <FormArray> this.formGroup.controls.domain;\n    const range = <FormArray> this.formGroup.controls.range;\n    domain.removeAt(domain.length - 1);\n    range.removeAt(range.length - 1);\n  }\n\n  /**\n   * Whether this rule has enough information to be used.\n   */\n  isPropEnabled(): boolean {\n    const rule = this._rule;\n    if (!rule.isComputed && rule.value) { return true; }\n    if (rule.isComputed && rule.function) { return true; }\n    return false;\n  }\n\n  /**\n   * Whether this rule requires domain/range mappings.\n   */\n  getPropNeedsMapping(): boolean {\n    return this._rule.function && this._rule.function !== 'identity';\n  }\n\n  /**\n   * Replaces current color palette with a random one.\n   */\n  addRandomColors() {\n    const palette = PALETTES[Math.floor(Math.random() * PALETTES.length)];\n    const range = <FormArray> this.formGroup.controls.range;\n    if (range.length < 3) {\n      range.setValue(palette[3].slice(0, range.length));\n    } else if (range.length < 10) {\n      range.setValue(palette[range.length]);\n    } else {\n      console.warn('No palettes available for 10+ colors.');\n    }\n  }\n\n  /**\n   * ngx-color-picker doesn't support Reactive Forms, so use a change\n   * handler to update the form.\n   */\n  onColorChange() {\n    this.writeValue(this.formGroup.getRawValue());\n  }\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { environment } from '../../environments/environment';\nimport { MAX_RESULTS, TIMEOUT_MS } from '../app.constants';\n\nexport const ColumnType = {\n  STRING: 'string',\n  NUMBER: 'number',\n  LAT: 'latitude',\n  LNG: 'longitude',\n  WKT: 'wkt',\n  DATE: 'date',\n  ID: 'id'\n};\n\nexport interface ColumnStat {\n  min: number;\n  max: number;\n  nulls: number;\n}\n\nexport interface Project {\n  id: string;\n}\n\nexport interface Query {\n  sql: string;\n  bytesProcessed: number;\n}\n\nexport interface BigQueryColumn {\n  name: string;\n  type: string;\n  mode: string;\n}\n\nexport interface BigQuerySchema {\n  fields: BigQueryColumn[];\n}\n\nexport interface BigQueryDryRunResponse {\n  ok: boolean;\n  totalBytesProcessed?: number;\n  statementType?: string;\n  schema?: BigQuerySchema;\n}\n\nexport interface BigQueryResponse {\n  error: string | undefined;\n  columns: Array<Object> | undefined;\n  columnNames: Array<string> | undefined;\n  rows: Array<Object> | undefined;\n  totalRows: number;\n  stats: Map<String, ColumnStat> | undefined;\n  pageToken: string | undefined;\n  jobID: string | undefined;\n  totalBytesProcessed?: number;\n}\n\n/**\n * Utility class for managing interaction with the Cloud BigQuery API.\n */\nexport class BigQueryService {\n\n  public isSignedIn = false;\n  public projects: Array<Project> = [];\n\n  private signinChangeCallback = () => { };\n\n  /**\n   * Initializes the service. Must be called before any queries are made.\n   */\n  init(): Promise<void> {\n    // Wait for Google APIs to load, then initialize and try to authenticate.\n    return pendingGapi\n      .then(() => {\n        gapi.client.init({\n          clientId: environment.authClientID,\n          scope: environment.authScope\n        })\n          .then(() => {\n            gapi['auth2'].getAuthInstance().isSignedIn.listen(((isSignedIn) => {\n              this.isSignedIn = isSignedIn;\n              this.signinChangeCallback();\n            }));\n            this.isSignedIn = !!gapi['auth2'].getAuthInstance().isSignedIn.get();\n            this.signinChangeCallback();\n          });\n      });\n  }\n\n  /**\n   * Returns current user details.\n   */\n  getUser(): Object {\n    return gapi['auth2'].getAuthInstance().currentUser.get();\n  }\n\n  /**\n   * Returns current user credentials.\n   */\n  getCredential(): Object {\n    let authResponse =  gapi['auth2'].getAuthInstance().currentUser.get().getAuthResponse(true);\n    if (authResponse) {\n      return { id_token: authResponse.id_token, access_token: authResponse.access_token };\n    }\n    return null;\n  }\n\n  /**\n   * Attempts session login.\n   */\n  signin() {\n    gapi['auth2'].getAuthInstance().signIn().then(() => this.signinChangeCallback());\n  }\n\n  /**\n   * Logs out of current session.\n   */\n  signout() {\n    this.isSignedIn = false;\n    gapi['auth2'].getAuthInstance().signOut().then(() => this.signinChangeCallback());\n  }\n\n  /**\n   * Sets callback to be invoked when signin status changes.\n   * @param callback\n   */\n  onSigninChange(callback): void {\n    this.signinChangeCallback = callback;\n  }\n\n  /**\n   * Queries and returns a list of GCP projects available to the current user.\n   */\n  getProjects(): Promise<Array<Project>> {\n    if (this.projects.length) { return Promise.resolve(this.projects); }\n\n    return gapi.client.request({ path: `https://www.googleapis.com/bigquery/v2/projects?maxResults=100000` })\n      .then((response) => {\n        this.projects = response.result.projects.slice();\n        this.projects.sort((p1, p2) => p1['id'] > p2['id'] ? 1 : -1);\n        return <Array<Project>>this.projects;\n      });\n  }\n\n  /**\n   * Queries and returns the sql text for a specific job ID. Throws an error if the\n   * job id is not for a SELECT statement.\n   */\n  getQueryFromJob(jobID: string, location: string, projectID: string): Promise<Query> {\n    const location_param = location ? `location=${location}` : '';\n    return gapi.client.request({\n      path: `https://www.googleapis.com/bigquery/v2/projects/${projectID}/jobs/${jobID}?${location_param}`\n    }).then((response) => {\n      if (!response.result.statistics.query) {\n        throw new Error('Job id is not for a query job.');\n      }\n      if (response.result.statistics.query.statementType != 'SELECT') {\n        throw new Error('Job id is not for a SELECT statement.');\n      }\n      return { sql: response.result.configuration.query.query, bytesProcessed: Number(response.result.statistics.query.totalBytesProcessed) };\n    });\n  }\n\n  /**\n   * Performs a dry run for the given query, and returns estimated bytes to be processed.\n   * If the dry run fails, returns -1.\n   * @param projectID\n   * @param sql\n   */\n  prequery(projectID: string, sql: string, location: string): Promise<BigQueryDryRunResponse> {\n    const configuration = {\n      dryRun: true,\n      query: {\n        query: sql,\n        maxResults: MAX_RESULTS,\n        timeoutMs: TIMEOUT_MS,\n        useLegacySql: false\n      }\n    };\n    if (location) { configuration.query['location'] = location; }\n    return gapi.client.request({\n      path: `https://www.googleapis.com/bigquery/v2/projects/${projectID}/jobs`,\n      method: 'POST',\n      body: { configuration },\n    }).then((response) => {\n      const { schema, statementType } = response.result.statistics.query;\n      const totalBytesProcessed = Number(response.result.statistics.query.totalBytesProcessed);\n      return { ok: true, schema, statementType, totalBytesProcessed };\n    }).catch((e) => {\n      if (e && e.result && e.result.error) {\n        throw new Error(e.result.error.message);\n      }\n      console.warn(e);\n      return { ok: false };\n    });\n  }\n\n  normalizeRows(rows: Array<Object>, normalizedCols: Array<Object>, stats: Map<String, ColumnStat>) {\n    return (rows || []).map((row) => {\n      const rowObject = {};\n      row['f'].forEach(({ v }, index) => {\n        const column = normalizedCols[index];\n        if (column['type'] === ColumnType.NUMBER) {\n          v = v === '' || v === null ? null : Number(v);\n          rowObject[column['name']] = v;\n          const stat = stats.get(column['name']);\n          if (v === null) {\n            stat.nulls++;\n          } else {\n            stat.max = Math.round(Math.max(stat.max, v) * 1000) / 1000;\n            stat.min = Math.round(Math.min(stat.min, v) * 1000) / 1000;\n          }\n        } else {\n          rowObject[column['name']] = v === null ? null : String(v);\n        }\n      });\n      return rowObject;\n    });\n  }\n\n  getResults(projectID: string, jobID: string, location: string, pageToken: string, normalized_cols: Array<Object>, stats: Map<String, ColumnStat>): Promise<BigQueryResponse> {\n    const body = {\n      maxResults: MAX_RESULTS,\n      timeoutMs: TIMEOUT_MS,\n      pageToken: pageToken\n    };\n    if (location) { body['location'] = location; }\n\n    return gapi.client.request({\n      path: `https://www.googleapis.com/bigquery/v2/projects/${projectID}/queries/${jobID}`,\n      method: 'GET',\n      params: body,\n    }).then((response) => {\n      if (response.result.jobComplete === false) {\n        throw new Error(`Request timed out after ${TIMEOUT_MS / 1000} seconds. This UI does not yet handle longer jobs.`);\n      }\n      // Normalize row structure.\n      const rows = this.normalizeRows(response.result.rows, normalized_cols, stats);\n\n      return { rows, stats, pageToken: response.result.pageToken } as BigQueryResponse;\n    });\n  }\n\n  query(projectID: string, sql: string, location: string): Promise<BigQueryResponse> {\n    const body = {\n      query: sql,\n      maxResults: MAX_RESULTS,\n      timeoutMs: TIMEOUT_MS,\n      useLegacySql: false\n    };\n    if (location) { body['location'] = location; }\n    return gapi.client.request({\n      path: `https://www.googleapis.com/bigquery/v2/projects/${projectID}/queries`,\n      method: 'POST',\n      body,\n    }).then((response) => {\n      const stats = new Map();\n\n      if (response.result.jobComplete === false) {\n        throw new Error(`Request timed out after ${TIMEOUT_MS / 1000} seconds. This UI does not yet handle longer jobs.`);\n      }\n\n      // Normalize column types.\n      const columnNames = [];\n      const columns = (response.result.schema.fields || []).map((field) => {\n        if (isNumericField(field)) {\n          field.type = ColumnType.NUMBER;\n          stats.set(field.name, { min: Infinity, max: -Infinity, nulls: 0 });\n        } else {\n          field.type = ColumnType.STRING;\n        }\n        columnNames.push(field.name);\n        return field;\n      });\n\n      // Normalize row structure.\n      const rows = this.normalizeRows(response.result.rows, columns, stats);\n\n      if (rows.length === 0) {\n        throw new Error('No results.');\n      }\n\n      const totalRows = Number(response.result.totalRows);\n\n      return { columns, columnNames, rows, stats, totalRows, pageToken: response.result.pageToken, jobID: response.result.jobReference.jobId,\n               totalBytesProcessed: Number(response.result.totalBytesProcessed)} as BigQueryResponse;\n    });\n  }\n}\n\nfunction isNumericField(field: Object) {\n  const fieldType = field['type'].toUpperCase();\n  return ['INTEGER', 'NUMBER', 'FLOAT', 'DECIMAL'].includes(fieldType);\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\n// Load required services into the firebase namespace.\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport { firebaseConfig } from '../../environments/environment';\nimport { StyleRule } from '../services/styles.service';\n\nconst SHARING_COLLECTION = 'GeoVizSharing';\n\nexport interface ShareableData {\n  sharingVersion: string;\n  projectID : string;\n  jobID : string;\n  location : string | undefined;\n  styles: string;\n  creationTimestampMs: number;\n}\n\n/**\n * Utility class for managing interaction with the Firestore.\n */\nexport class FirestoreService {\n  private db: firebase.firestore.Firestore = null;\n\n  constructor() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    this.db = firebase.firestore();\n  }\n\n  storeShareableData(shareableData : ShareableData) : Promise<string> {\n    return this.db.collection(SHARING_COLLECTION).add(shareableData)\n      .then(function(docRef) {\n\treturn docRef.id;\n      });\n  }\n\n  getSharedData(docId: string) : Promise<ShareableData> {\n    return this.db.collection(SHARING_COLLECTION).doc(docId).get().then(function(doc) {\n      if (!doc.exists) {\n\t  throw new Error('Shared visualization does not exist. Please check your URL!');\n      }\n      return doc.data() as ShareableData;\n    });\n  }\n\n  authorize(credential: object) {\n    const firebase_credential = firebase.auth.GoogleAuthProvider.credential(\n      credential['id_token'],\n      credential['access_token']\n    );\n    firebase.auth().signInWithCredential(firebase_credential)\n  }\n}\n","export interface GeoJSONFeature {\n  geometry: {};\n  properties: object;\n}\n\nexport class GeoJSONService {\n  /**\n   * Converts rows to GeoJSON features.\n   * @param rows\n   * @param geoColumn\n   */\n  static rowsToGeoJSON(rows: object[], geoColumn: string): GeoJSONFeature[] {\n    if (!rows || !geoColumn) return [];\n\n    // Convert rows to GeoJSON features.\n    const features = [];\n    rows.forEach((row) => {\n      if (!row[geoColumn]) return;\n      try {\n        const geometry = JSON.parse(row[geoColumn]);\n        const feature = { type: 'Feature', geometry, properties: row };\n        features.push(feature);\n      } catch (e) {\n        // Parsing can fail (e.g. invalid GeoJSON); just log the error.\n        console.error(e);\n      }\n    });\n\n    return features;\n  }\n}","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3Scale from 'd3-scale';\nimport * as d3Color from 'd3-color';\n\nexport interface StyleRule {\n  isComputed: boolean;\n  value: string;\n  property: string;\n  function: string;\n  domain: string[];\n  range: string[];\n}\n\nconst DEFAULT_STYLES = {\n  fillColor: [255, 0, 0],\n  fillOpacity: 1.0,\n  strokeColor: [255, 0, 0],\n  strokeOpacity: 1.0,\n  strokeWeight: 1.0,\n  circleRadius: 25\n};\n\nconst parseNumber = Number;\nconst parseBoolean = (v) => !!String(v).match(/y|1|t/gi);\nconst parseColorString = (v) => {\n  const color = d3Color.color(v);\n  return color ? String(color) : DEFAULT_STYLES.fillColor;\n};\n\nexport interface StyleProp {\n  name: string;\n  type: string;\n  description: string;\n  parse: (i: string) => any;\n}\n\nexport const StyleProps: Array<StyleProp> = [\n  {\n    name: 'fillColor',\n    type: 'color',\n    parse: parseColorString,\n    description: ''\n      + 'Fill color of a polygon or point. For example, \"linear\" or \"interval\" functions may be used'\n      + ' to map numeric values to a color gradient.'\n  },\n  {\n    name: 'fillOpacity',\n    type: 'number',\n    parse: parseNumber,\n    description: ''\n      + 'Fill opacity of a polygon or point. Values must be in the range 0—1, where 0=transparent'\n      + ' and 1=opaque.'\n  },\n  {\n    name: 'strokeColor',\n    type: 'color',\n    parse: parseColorString,\n    description: 'Stroke/outline color of a polygon or line.'},\n  {\n    name: 'strokeOpacity',\n    type: 'number',\n    parse: parseNumber,\n    description: ''\n      + 'Stroke/outline opacity of polygon or line. Values must be in the range 0—1, where'\n      + ' 0=transparent and 1=opaque.'\n  },\n  {\n    name: 'strokeWeight',\n    type: 'number',\n    parse: parseNumber,\n    description: 'Stroke/outline width, in pixels, of a polygon or line.'},\n  {\n    name: 'circleRadius',\n    type: 'number',\n    parse: parseNumber,\n    description: ''\n      + 'Radius of the circle representing a point, in meters. For example, a \"linear\" function'\n      + ' could be used to map numeric values to point sizes, creating a scatterplot style.'\n    }\n];\n\nexport const StyleFunctions = [\n  {\n    name: 'identity',\n    description: 'Data value of each field is used, verbatim, as the styling value.'},\n  {\n    name: 'categorical',\n    description: 'Data values of each field listed in the domain are mapped 1:1 with corresponding styles in the range.'},\n  {\n    name: 'interval',\n    description: ''\n      + 'Data values of each field are rounded down to the nearest value in the domain, then styled'\n      + ' with the corresponding style in the range.'\n  },\n  {\n    name: 'linear',\n    description: ''\n      + 'Data values of each field are interpolated linearly across values in the domain, then'\n      + ' styled with a blend of the corresponding styles in the range.'\n  },\n  {\n    name: 'exponential',\n    disabled: true,\n    description: ''\n      + 'Data values of each field are interpolated exponentially across values in the domain,'\n      + ' then styled with a blend of the corresponding styles in the range.'\n    },\n];\n\nexport class StylesService {\n  iconCache: Map<string, google.maps.Icon> = new Map();\n  imageCache: Map<string, string> = new Map();\n  scaleCache: Map<object, d3Scale.ScaleOrdinal<any, any> | d3Scale.ScaleLinear<number, any> | d3Scale.ScaleThreshold<number, any>>\n    = new Map();\n\n  constructor () {\n\n  }\n\n  uncache () {\n    this.scaleCache.clear();\n  }\n\n  parseStyle (propName: string, row: object, rule: StyleRule) {\n    const prop = StyleProps.find((p) => p.name === propName);\n    let scale = this.scaleCache.get(rule);\n\n    if (!rule.isComputed) {\n      // Static value.\n      return rule.value\n        ? prop.parse(rule.value)\n        : DEFAULT_STYLES[propName];\n\n    } else if (!rule.property || !rule.function) {\n      // Default value.\n      return DEFAULT_STYLES[propName];\n\n    } else if (rule.function === 'identity') {\n      // Identity function.\n      return prop.parse(row[rule.property]);\n\n    } else if (rule.function === 'categorical') {\n      // Categorical function.\n      if (!scale) {\n        const range = <any[]> rule.range.map((v) => prop.parse(v));\n        scale = d3Scale.scaleOrdinal<string>()\n          .domain(rule.domain)\n          .range(range)\n          .unknown(DEFAULT_STYLES[propName]);\n        this.scaleCache.set(rule, scale);\n      }\n      const callableScale = scale as (any) => any;\n      return callableScale(row[rule.property]);\n\n    } else if (rule.function === 'interval') {\n      // Interval function.\n      if (!scale) {\n        const range = <any[]> rule.range.map((v) => prop.parse(v));\n        const tmpScale = d3Scale.scaleThreshold<number, any>()\n          .domain(rule.domain.map(Number))\n          .range([...range, DEFAULT_STYLES[propName]]);\n        scale = tmpScale as any as d3Scale.ScaleThreshold<number, any>;\n        this.scaleCache.set(rule, scale);\n      }\n      const callableScale = scale as (number) => any;\n      return callableScale(Number(row[rule.property]));\n\n    } else if (rule.function === 'linear') {\n      // Linear function.\n      if (!scale) {\n        const range = <any[]> rule.range.map((v) => prop.parse(v));\n        scale = d3Scale.scaleLinear<number, any>()\n          .domain(rule.domain.map(Number))\n          .range(range);\n        this.scaleCache.set(rule, scale);\n      }\n      const callableScale = scale as (number) => any;\n      return callableScale(Number(row[rule.property]));\n\n    }\n    throw new Error('Unknown style rule function: ' + rule.function);\n  }\n\n  getIcon (radius: number, color: string, opacity: number) {\n    const iconCacheKey = `${radius}:${color}:${opacity}`;\n    const imageCacheKey = `${color}:${opacity}`;\n\n    // Use cached icon if available.\n    if (this.iconCache.has(iconCacheKey)) { return this.iconCache.get(iconCacheKey); }\n\n    // Use large, scaled icon rather than new image for each size.\n    const iconRadius = 256;\n    const iconWidth = 512;\n\n    // Used cached image if available.\n    if (!this.imageCache.has(imageCacheKey)) {\n      // Parse color and apply opacity.\n      const parsedColor = d3Color.color(color);\n      parsedColor.opacity = opacity;\n\n      // Create canvas and render circle.\n      const canvas = document.createElement('canvas');\n      canvas.height = canvas.width = iconWidth;\n      const ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.arc(iconRadius, iconRadius, iconRadius - 0.5, 0, Math.PI * 2);\n      ctx.fillStyle = String(parsedColor);\n      ctx.strokeStyle = null;\n      ctx.fill();\n\n      // Cache the image.\n      this.imageCache.set(imageCacheKey, canvas.toDataURL());\n    }\n\n    // Cache and return result.\n    const icon = {\n      url: this.imageCache.get(imageCacheKey),\n      size: new google.maps.Size(iconWidth, iconWidth),\n      scaledSize: new google.maps.Size(radius * 2, radius * 2),\n      anchor: new google.maps.Point(radius, radius)\n    };\n    this.iconCache.set(iconCacheKey, icon);\n    return icon;\n  }\n}\n","module.exports = \".view {\\n  font-family: Roboto, Helvetica, sans-serif;\\n  padding: 1em;\\n  max-width: 700px;\\n}\\n\\n.flex-spacer {\\n    -webkit-box-flex: 1;\\n            flex-grow: 1;\\n}\\n\\nnav {\\n  text-align: center;\\n}\\n\\n.back {\\n  margin-top: 2em;\\n}\\n\\na.policy-link {\\n  color: #4285f4;\\n  font-weight: 400;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVybXMvdGVybXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJDQUEyQztFQUMzQyxhQUFhO0VBQ2IsaUJBQWlCO0NBQ2xCOztBQUVEO0lBQ0ksb0JBQWE7WUFBYixhQUFhO0NBQ2hCOztBQUVEO0VBQ0UsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsZ0JBQWdCO0NBQ2pCOztBQUVEO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL3Rlcm1zL3Rlcm1zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmlldyB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgcGFkZGluZzogMWVtO1xuICBtYXgtd2lkdGg6IDcwMHB4O1xufVxuXG4uZmxleC1zcGFjZXIge1xuICAgIGZsZXgtZ3JvdzogMTtcbn1cblxubmF2IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYmFjayB7XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cblxuYS5wb2xpY3ktbGluayB7XG4gIGNvbG9yOiAjNDI4NWY0O1xuICBmb250LXdlaWdodDogNDAwO1xufVxuIl19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"header\\\">\\n  <span>BigQuery Geo Viz</span>\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <a mat-button href=\\\"/\\\">Back</a>\\n</mat-toolbar>\\n<div class=\\\"view\\\">\\n  <h1>Terms of Service &amp; Privacy</h1>\\n  <p>\\n    This tool is provided as a reference implementation of Google Maps and geospatial BigQuery API usage capabilities. It may\\n    be useful as a debugging and visualization resource. It is not an officially supported Google product and is provided without\\n    guarantees of maintenance.\\n  </p>\\n  <nav>\\n    <a class=\\\"policy-link\\\" mat-button href=\\\"https://policies.google.com/terms\\\" target=\\\"_blank\\\">Google Terms of Service</a>\\n    <a class=\\\"policy-link\\\" mat-button href=\\\"https://cloud.google.com/terms/\\\" target=\\\"_blank\\\">Google Cloud Platform Terms of Service</a>\\n    <a class=\\\"policy-link\\\" mat-button href=\\\"https://policies.google.com/privacy\\\" target=\\\"_blank\\\">Privacy</a>\\n  </nav>\\n  <a mat-raised-button color=\\\"primary\\\" href=\\\"/\\\" class=\\\"back\\\">Back</a>\\n</div>\\n\"","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements AfterViewInit {\n  constructor() {}\n\n  /**\n   * Constructs a Maps API instance after DOM has initialized.\n   */\n  ngAfterViewInit() {\n  }\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const environment = {\n  production: false,\n  authClientID: '419125973937-kl2cru5pu2vfugne7lr1hosgseh4lo1s.apps.googleusercontent.com',\n  authScope: 'https://www.googleapis.com/auth/bigquery'\n};\n\n// Your web app's Firebase configuration\n// TODO(hormati): Create a different config for testing.\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyDS8k-x7L9vZ_mvvdyTzwQ1LNXsYLNnhOM\",\n  authDomain: \"bigquerygeoviz.firebaseapp.com\",\n  databaseURL: \"https://bigquerygeoviz.firebaseio.com\",\n  projectId: \"bigquerygeoviz\",\n  storageBucket: \"bigquerygeoviz.appspot.com\",\n  messagingSenderId: \"419125973937\",\n  appId: \"1:419125973937:web:eba1c63d64b58be3ec2390\",\n  measurementId: \"G-FNH2K1BP5G\"\n};\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}